# the CLI reduces this project.yaml to a single JSON object which it sends to
# https://{host}/api/configure

# this is just for one project
id: 123-abc-def
name: Example Project

workflows:
  workflow-a:
    jobs:
      job-2:
        name: fetch dhis2 data
        ## This credential doesn't exist... create shell?
        credential:
          name: my-salesforce-keys
          # encrypted: "file://mycreds.gpg"
          # If we can't find this cred, then we create one with {} empty json body, owned by the deployer
          body: ## would this even get picked up by our configurer.ex?
            username: blah
            password: *** 
        # - - - variant
        credential: my-salesforce-keys
        # - - - variant 2
        credential:
          name: my-salesforce-keys
          body: file://blah.json ## for CREDENTIALS we only follow a path.
        trigger: 
          type: flow
          # - - -
          flow:
            on-failure: job-3
        expression:  > 
          fn(state => {
            const { surname, age, sex } = state.data;
            const { gender } = state.globals;
            const fhirPayload = { name: surname, age, gender: gender[sex] };
            return { ...state, fhirPayload };
          });

  workflow-b:
    jobs:
      job-3:
        trigger: 
          cron: "* 5 * * *"
      job-4:
        trigger: webhook
        # - - - later maybe - - -
        trigger: 
          webhook:
            path: /my-custom/endpoint
            api-key: foo

# different file 'credentials.yaml', private encrypted or not committed
# cli deploy credentials.yaml
credentials:
  my-salesforce-keys:
    username: blah
    password: ***

globals:
  clinic-map-a:
    abc123: Local Clinic 1
    def456: Garey District Clinic
    rooms:
      '13': Clinic Room A
      '22': Clinic Reception Area
  gender:
    m: male
    f: female
    nb: non-binary